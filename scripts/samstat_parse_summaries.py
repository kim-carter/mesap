#!/usr/bin/env python3

# Import necessary libraries:
import csv
import os
from bs4 import BeautifulSoup


# Look in qc directory for samstat.html files
cwd = "/OUTPUT/qc"


# Get list of 'samstat.html' files generated by SAMStat:
files = [file for file in os.listdir(cwd) if file.endswith('samstat.html')]


# Read in each samstat.html file and store in a list
files_list = [] 

for file in files:
    with open(cwd+"/"+file) as fp:
        soup = BeautifulSoup(fp,features="html.parser")
        files_list.append(soup)


# Create a list to store the titles of the files
names = [] 

for i in range(0,len(files_list)):
    title = files_list[i].title.get_text()
    names.append(title) 


# Add the names of each file as a key in a new dictionary
d1 = dict.fromkeys(names,0)


# Now collect the 'td' tags for each html file - this is where the data we want is stored
tags = [] 

for i in range(0,len(files_list)):
    td = files_list[i].find_all('td')
    tags.append(td) 


# Create an empty dictionary to store the data from tags for each file as the values - no keys for this dictionary - will combine later
d2 = {} 

for i in range(0, len(files_list)):
    
    a = tags[i][4].get_text() # finds the number of reads w MAPQ>=30
    b = tags[i][5].get_text() # finds the percentage of reads w MAPQ>=30
    c = tags[i][16].get_text() # finds the number of reads w MAPQ<3
    d = tags[i][17].get_text() # finds the percentage of reads w MAPQ<3
    e = tags[i][19].get_text() # finds the number of unmapped reads
    g = tags[i][20].get_text() # finds the percentage of unmapped reads
    h = tags[i][22].get_text() # finds the total number of reads
    
    # add these values to the dictionary
    
    d2[i] = [a,b,c,d,e,g,h]

# now create a new dictionary, taking the keys from d1 and values from d2
d3 = dict(zip(list(d1.keys()), list(d2.values())))

# export the data to a csv file
with open('/OUTPUT/qc/samstat_results_summary.csv', 'w', newline='') as f:
    w = csv.writer(f)
    w.writerow(['Sample_name', 'MAPQ30','Percent_MAPQ30','MAPQ3','Percent_MAPQ3','Unmapped','Percent_unmapped','Total'])
    for i in d3:
        w.writerow([i]+d3[i])
    f.close()

